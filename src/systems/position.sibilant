
(include "kit-interface/header")
(import-namespace interface)

(require! (lit Component System) "../ecs/component")

(define Position-interface Component
  (x 0)
  (y 0)
  (z 0))

(export Position-interface)

(define Position System

  (interface Position-interface)

  (def shift (entity [xshift yshift])
       (var c (.get this entity))
       (set c 'x (+ c.x xshift)
            'y (+ c.y yshift))
       (.*update-component this c))

  (def move (entity (lit x y))
       (var c (.get this entity))
       (set c 'x x 'y y)
       (.*update-component this c))

  (def *update-component (c)
       (if (< c.x 0) (assign c.x (+ c.x (first this.process.rendering.dimensions))))
       (if (< c.y 0) (assign c.y (+ c.y (second this.process.rendering.dimensions))))

       (set c
            'x (mod c.x (first this.process.rendering.dimensions))
            'y (mod c.y (second this.process.rendering.dimensions)))))


(export Position)
